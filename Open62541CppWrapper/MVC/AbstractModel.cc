//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------

#include "AbstractModel.hh"

namespace Smart {

AbstractModel::AbstractModel()
:	changed_values(false)
{  }

void AbstractModel::attach(AbstractModelObserver *observer) {
	std::unique_lock<std::mutex> lock(registry_mutex);
	registry.insert(observer);
}

void AbstractModel::detach(AbstractModelObserver *observer) {
	std::unique_lock<std::mutex> lock(registry_mutex);
	registry.erase(observer);
}

void AbstractModel::notify() {
	std::unique_lock<std::mutex> lock(registry_mutex);
	for(auto &entry: registry) {
		entry->update();
	}
}

} /* namespace Smart */
